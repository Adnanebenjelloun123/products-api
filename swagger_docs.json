{
    "openapi": "3.0.3",
    "info": {
        "title": "Ashnoo Api",
        "description": "",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/conversations": {
            "get": {
                "operationId": "getConversationCollection",
                "tags": [
                    "Conversation"
                ],
                "responses": {
                    "200": {
                        "description": "Conversation collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Conversation.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Conversation"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Conversation"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Conversation resources.",
                "description": "Retrieves the collection of Conversation resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/conversations/{uri}": {
            "get": {
                "operationId": "getConversationItem",
                "tags": [
                    "Conversation"
                ],
                "responses": {
                    "200": {
                        "description": "Conversation resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversation.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversation"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Conversation resource.",
                "description": "Retrieves a Conversation resource.",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/insights": {
            "get": {
                "operationId": "gETInsightCollection",
                "tags": [
                    "Insight"
                ],
                "responses": {
                    "200": {
                        "description": "Insight collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Insight.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Insight"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Insight"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Insight resources.",
                "description": "Retrieves the collection of Insight resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/insights/{id}": {
            "get": {
                "operationId": "getInsightItem",
                "tags": [
                    "Insight"
                ],
                "responses": {
                    "204": {
                        "description": "Insight resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {}
                            },
                            "application/json": {
                                "schema": {}
                            },
                            "text/html": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Insight resource.",
                "description": "Retrieves a Insight resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/lead_custom_fields": {
            "get": {
                "operationId": "getLeadCustomFieldCollection",
                "tags": [
                    "LeadCustomField"
                ],
                "responses": {
                    "200": {
                        "description": "LeadCustomField collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LeadCustomField.jsonld-custom_field.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LeadCustomField resources.",
                "description": "Retrieves the collection of LeadCustomField resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postLeadCustomFieldCollection",
                "tags": [
                    "LeadCustomField"
                ],
                "responses": {
                    "201": {
                        "description": "LeadCustomField resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField.jsonld-custom_field.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                }
                            }
                        },
                        "links": {
                            "GetLeadCustomFieldItem": {
                                "operationId": "getLeadCustomFieldItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /lead_custom_fields/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a LeadCustomField resource.",
                "description": "Creates a LeadCustomField resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new LeadCustomField resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadCustomField.jsonld-custom_field.write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadCustomField-custom_field.write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadCustomField-custom_field.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/lead_custom_fields/{id}": {
            "get": {
                "operationId": "getLeadCustomFieldItem",
                "tags": [
                    "LeadCustomField"
                ],
                "responses": {
                    "200": {
                        "description": "LeadCustomField resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField.jsonld-custom_field.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a LeadCustomField resource.",
                "description": "Retrieves a LeadCustomField resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putLeadCustomFieldItem",
                "tags": [
                    "LeadCustomField"
                ],
                "responses": {
                    "200": {
                        "description": "LeadCustomField resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField.jsonld-custom_field.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                }
                            }
                        },
                        "links": {
                            "GetLeadCustomFieldItem": {
                                "operationId": "getLeadCustomFieldItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /lead_custom_fields/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the LeadCustomField resource.",
                "description": "Replaces the LeadCustomField resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated LeadCustomField resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadCustomField.jsonld-custom_field.write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadCustomField-custom_field.write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadCustomField-custom_field.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteLeadCustomFieldItem",
                "tags": [
                    "LeadCustomField"
                ],
                "responses": {
                    "204": {
                        "description": "LeadCustomField resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the LeadCustomField resource.",
                "description": "Removes the LeadCustomField resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchLeadCustomFieldItem",
                "tags": [
                    "LeadCustomField"
                ],
                "responses": {
                    "200": {
                        "description": "LeadCustomField resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField.jsonld-custom_field.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadCustomField-custom_field.read"
                                }
                            }
                        },
                        "links": {
                            "GetLeadCustomFieldItem": {
                                "operationId": "getLeadCustomFieldItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /lead_custom_fields/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the LeadCustomField resource.",
                "description": "Updates the LeadCustomField resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated LeadCustomField resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadCustomField-custom_field.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/leads": {
            "get": {
                "operationId": "getLeadCollection",
                "tags": [
                    "Lead"
                ],
                "responses": {
                    "200": {
                        "description": "Lead collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Lead.jsonld-lead.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Lead-lead.read"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Lead-lead.read"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Lead resources.",
                "description": "Retrieves the collection of Lead resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postLeadCollection",
                "tags": [
                    "Lead"
                ],
                "responses": {
                    "201": {
                        "description": "Lead resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead.jsonld-lead.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead-lead.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead-lead.read"
                                }
                            }
                        },
                        "links": {
                            "GetLeadItem": {
                                "operationId": "getLeadItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /leads/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Lead resource.",
                "description": "Creates a Lead resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Lead resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lead.jsonld-lead.write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lead-lead.write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Lead-lead.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/leads/{id}": {
            "get": {
                "operationId": "getLeadItem",
                "tags": [
                    "Lead"
                ],
                "responses": {
                    "200": {
                        "description": "Lead resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead.jsonld-lead.read_lead.item.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead-lead.read_lead.item.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead-lead.read_lead.item.read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Lead resource.",
                "description": "Retrieves a Lead resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putLeadItem",
                "tags": [
                    "Lead"
                ],
                "responses": {
                    "200": {
                        "description": "Lead resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead.jsonld-lead.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead-lead.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead-lead.read"
                                }
                            }
                        },
                        "links": {
                            "GetLeadItem": {
                                "operationId": "getLeadItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /leads/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Lead resource.",
                "description": "Replaces the Lead resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Lead resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lead.jsonld-lead.write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lead-lead.write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Lead-lead.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteLeadItem",
                "tags": [
                    "Lead"
                ],
                "responses": {
                    "204": {
                        "description": "Lead resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Lead resource.",
                "description": "Removes the Lead resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchLeadItem",
                "tags": [
                    "Lead"
                ],
                "responses": {
                    "200": {
                        "description": "Lead resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead.jsonld-lead.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead-lead.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead-lead.read"
                                }
                            }
                        },
                        "links": {
                            "GetLeadItem": {
                                "operationId": "getLeadItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /leads/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Lead resource.",
                "description": "Updates the Lead resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Lead resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lead-lead.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/live_chats": {
            "get": {
                "operationId": "getLiveChatCollection",
                "tags": [
                    "LiveChat"
                ],
                "responses": {
                    "200": {
                        "description": "LiveChat collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LiveChat.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LiveChat"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LiveChat"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LiveChat resources.",
                "description": "Retrieves the collection of LiveChat resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postLiveChatCollection",
                "tags": [
                    "LiveChat"
                ],
                "responses": {
                    "201": {
                        "description": "LiveChat resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat"
                                }
                            }
                        },
                        "links": {
                            "GetLiveChatItem": {
                                "operationId": "getLiveChatItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /live_chats/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a LiveChat resource.",
                "description": "Creates a LiveChat resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new LiveChat resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveChat.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveChat"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveChat"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/live_chats/{id}": {
            "get": {
                "operationId": "getLiveChatItem",
                "tags": [
                    "LiveChat"
                ],
                "responses": {
                    "200": {
                        "description": "LiveChat resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a LiveChat resource.",
                "description": "Retrieves a LiveChat resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putLiveChatItem",
                "tags": [
                    "LiveChat"
                ],
                "responses": {
                    "200": {
                        "description": "LiveChat resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat"
                                }
                            }
                        },
                        "links": {
                            "GetLiveChatItem": {
                                "operationId": "getLiveChatItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /live_chats/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the LiveChat resource.",
                "description": "Replaces the LiveChat resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated LiveChat resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveChat.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveChat"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveChat"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteLiveChatItem",
                "tags": [
                    "LiveChat"
                ],
                "responses": {
                    "204": {
                        "description": "LiveChat resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the LiveChat resource.",
                "description": "Removes the LiveChat resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchLiveChatItem",
                "tags": [
                    "LiveChat"
                ],
                "responses": {
                    "200": {
                        "description": "LiveChat resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveChat"
                                }
                            }
                        },
                        "links": {
                            "GetLiveChatItem": {
                                "operationId": "getLiveChatItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /live_chats/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the LiveChat resource.",
                "description": "Updates the LiveChat resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated LiveChat resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveChat"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/stats": {
            "get": {
                "operationId": "gETStatCollection",
                "tags": [
                    "Stat"
                ],
                "responses": {
                    "200": {
                        "description": "Stat collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Stat.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Stat"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Stat"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Stat resources.",
                "description": "Retrieves the collection of Stat resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/stats/{id}": {
            "get": {
                "operationId": "getStatItem",
                "tags": [
                    "Stat"
                ],
                "responses": {
                    "204": {
                        "description": "Stat resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {}
                            },
                            "application/json": {
                                "schema": {}
                            },
                            "text/html": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Stat resource.",
                "description": "Retrieves a Stat resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sub_accounts": {
            "get": {
                "operationId": "getSubAccountCollection",
                "tags": [
                    "SubAccount"
                ],
                "responses": {
                    "200": {
                        "description": "SubAccount collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubAccount.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubAccount"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubAccount"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SubAccount resources.",
                "description": "Retrieves the collection of SubAccount resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSubAccountCollection",
                "tags": [
                    "SubAccount"
                ],
                "responses": {
                    "201": {
                        "description": "SubAccount resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount"
                                }
                            }
                        },
                        "links": {
                            "GetSubAccountItem": {
                                "operationId": "getSubAccountItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sub_accounts/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SubAccount resource.",
                "description": "Creates a SubAccount resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SubAccount resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubAccount.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubAccount"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SubAccount"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/sub_accounts/{id}": {
            "get": {
                "operationId": "getSubAccountItem",
                "tags": [
                    "SubAccount"
                ],
                "responses": {
                    "200": {
                        "description": "SubAccount resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SubAccount resource.",
                "description": "Retrieves a SubAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSubAccountItem",
                "tags": [
                    "SubAccount"
                ],
                "responses": {
                    "200": {
                        "description": "SubAccount resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount"
                                }
                            }
                        },
                        "links": {
                            "GetSubAccountItem": {
                                "operationId": "getSubAccountItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sub_accounts/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SubAccount resource.",
                "description": "Replaces the SubAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SubAccount resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubAccount.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubAccount"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SubAccount"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSubAccountItem",
                "tags": [
                    "SubAccount"
                ],
                "responses": {
                    "204": {
                        "description": "SubAccount resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SubAccount resource.",
                "description": "Removes the SubAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchSubAccountItem",
                "tags": [
                    "SubAccount"
                ],
                "responses": {
                    "200": {
                        "description": "SubAccount resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubAccount"
                                }
                            }
                        },
                        "links": {
                            "GetSubAccountItem": {
                                "operationId": "getSubAccountItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sub_accounts/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the SubAccount resource.",
                "description": "Updates the SubAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SubAccount resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubAccount"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/support_tickets": {
            "get": {
                "operationId": "getSupportTicketCollection",
                "tags": [
                    "SupportTicket"
                ],
                "responses": {
                    "200": {
                        "description": "SupportTicket collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SupportTicket.jsonld-support_ticket.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupportTicket-support_ticket.read"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupportTicket-support_ticket.read"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SupportTicket resources.",
                "description": "Retrieves the collection of SupportTicket resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSupportTicketCollection",
                "tags": [
                    "SupportTicket"
                ],
                "responses": {
                    "201": {
                        "description": "SupportTicket resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket.jsonld-support_ticket.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket-support_ticket.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket-support_ticket.read"
                                }
                            }
                        },
                        "links": {
                            "GetSupportTicketItem": {
                                "operationId": "getSupportTicketItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /support_tickets/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SupportTicket resource.",
                "description": "Creates a SupportTicket resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SupportTicket resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportTicket.jsonld-support_ticket.write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportTicket-support_ticket.write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportTicket-support_ticket.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/support_tickets/{id}": {
            "get": {
                "operationId": "getSupportTicketItem",
                "tags": [
                    "SupportTicket"
                ],
                "responses": {
                    "200": {
                        "description": "SupportTicket resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket.jsonld-support_ticket.read_support_ticket.item.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket-support_ticket.read_support_ticket.item.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket-support_ticket.read_support_ticket.item.read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SupportTicket resource.",
                "description": "Retrieves a SupportTicket resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSupportTicketItem",
                "tags": [
                    "SupportTicket"
                ],
                "responses": {
                    "200": {
                        "description": "SupportTicket resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket.jsonld-support_ticket.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket-support_ticket.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket-support_ticket.read"
                                }
                            }
                        },
                        "links": {
                            "GetSupportTicketItem": {
                                "operationId": "getSupportTicketItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /support_tickets/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SupportTicket resource.",
                "description": "Replaces the SupportTicket resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SupportTicket resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportTicket.jsonld-support_ticket.write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportTicket-support_ticket.write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportTicket-support_ticket.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSupportTicketItem",
                "tags": [
                    "SupportTicket"
                ],
                "responses": {
                    "204": {
                        "description": "SupportTicket resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SupportTicket resource.",
                "description": "Removes the SupportTicket resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchSupportTicketItem",
                "tags": [
                    "SupportTicket"
                ],
                "responses": {
                    "200": {
                        "description": "SupportTicket resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket.jsonld-support_ticket.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket-support_ticket.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportTicket-support_ticket.read"
                                }
                            }
                        },
                        "links": {
                            "GetSupportTicketItem": {
                                "operationId": "getSupportTicketItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /support_tickets/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the SupportTicket resource.",
                "description": "Updates the SupportTicket resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SupportTicket resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportTicket-support_ticket.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/team_members": {
            "get": {
                "operationId": "getTeamMemberCollection",
                "tags": [
                    "TeamMember"
                ],
                "responses": {
                    "200": {
                        "description": "TeamMember collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TeamMember.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamMember"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamMember"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of TeamMember resources.",
                "description": "Retrieves the collection of TeamMember resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postTeamMemberCollection",
                "tags": [
                    "TeamMember"
                ],
                "responses": {
                    "201": {
                        "description": "TeamMember resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember"
                                }
                            }
                        },
                        "links": {
                            "GetTeamMemberItem": {
                                "operationId": "getTeamMemberItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /team_members/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a TeamMember resource.",
                "description": "Creates a TeamMember resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new TeamMember resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/team_members/{id}": {
            "get": {
                "operationId": "getTeamMemberItem",
                "tags": [
                    "TeamMember"
                ],
                "responses": {
                    "200": {
                        "description": "TeamMember resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a TeamMember resource.",
                "description": "Retrieves a TeamMember resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putTeamMemberItem",
                "tags": [
                    "TeamMember"
                ],
                "responses": {
                    "200": {
                        "description": "TeamMember resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember"
                                }
                            }
                        },
                        "links": {
                            "GetTeamMemberItem": {
                                "operationId": "getTeamMemberItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /team_members/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the TeamMember resource.",
                "description": "Replaces the TeamMember resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated TeamMember resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteTeamMemberItem",
                "tags": [
                    "TeamMember"
                ],
                "responses": {
                    "204": {
                        "description": "TeamMember resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the TeamMember resource.",
                "description": "Removes the TeamMember resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchTeamMemberItem",
                "tags": [
                    "TeamMember"
                ],
                "responses": {
                    "200": {
                        "description": "TeamMember resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMember"
                                }
                            }
                        },
                        "links": {
                            "GetTeamMemberItem": {
                                "operationId": "getTeamMemberItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /team_members/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the TeamMember resource.",
                "description": "Updates the TeamMember resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated TeamMember resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMember"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/users": {
            "get": {
                "operationId": "getUserCollection",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User.jsonld-user.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User-user.read"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User-user.read"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of User resources.",
                "description": "Retrieves the collection of User resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postUserCollection",
                "tags": [
                    "User"
                ],
                "responses": {
                    "201": {
                        "description": "User resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-user.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-user.read"
                                }
                            }
                        },
                        "links": {
                            "GetUserItem": {
                                "operationId": "getUserItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a User resource.",
                "description": "Creates a User resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new User resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld-user.write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-user.write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/User-user.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/users/{id}": {
            "get": {
                "operationId": "getUserItem",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-user.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-user.read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a User resource.",
                "description": "Retrieves a User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putUserItem",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-user.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-user.read"
                                }
                            }
                        },
                        "links": {
                            "GetUserItem": {
                                "operationId": "getUserItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the User resource.",
                "description": "Replaces the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated User resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld-user.write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-user.write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/User-user.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteUserItem",
                "tags": [
                    "User"
                ],
                "responses": {
                    "204": {
                        "description": "User resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the User resource.",
                "description": "Removes the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchUserItem",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-user.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-user.read"
                                }
                            }
                        },
                        "links": {
                            "GetUserItem": {
                                "operationId": "getUserItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the User resource.",
                "description": "Updates the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated User resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-user.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/login_check": {
            "post": {
                "tags": [
                    "Token"
                ],
                "operationId": "postCredentialsItem",
                "summary": "Get JWT token to login.",
                "requestBody": {
                    "description": "Create new JWT Token",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credentials"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get JWT token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Conversation": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "idUrlEncoded": {
                        "type": "string"
                    },
                    "botId": {
                        "type": "string"
                    },
                    "botName": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Message"
                        },
                        "nullable": true
                    },
                    "uri": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "dateText": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Conversation.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "type": "string"
                    },
                    "idUrlEncoded": {
                        "type": "string"
                    },
                    "botId": {
                        "type": "string"
                    },
                    "botName": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Message.jsonld"
                        },
                        "nullable": true
                    },
                    "uri": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "dateText": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Insight": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "activeUsers": {
                        "type": "integer"
                    },
                    "totalUsers": {
                        "type": "integer"
                    },
                    "newUsers": {
                        "type": "integer"
                    },
                    "triggers": {
                        "type": "integer"
                    },
                    "receivedMessages": {
                        "type": "integer"
                    },
                    "sentMessages": {
                        "type": "integer"
                    }
                }
            },
            "Insight.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "activeUsers": {
                        "type": "integer"
                    },
                    "totalUsers": {
                        "type": "integer"
                    },
                    "newUsers": {
                        "type": "integer"
                    },
                    "triggers": {
                        "type": "integer"
                    },
                    "receivedMessages": {
                        "type": "integer"
                    },
                    "sentMessages": {
                        "type": "integer"
                    }
                }
            },
            "Lead-lead.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "telephone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    }
                }
            },
            "Lead-lead.read_lead.item.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "telephone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LeadCustomField-lead.read_lead.item.read"
                        }
                    }
                }
            },
            "Lead-lead.write": {
                "type": "object",
                "description": "",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "telephone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LeadCustomField-lead.write"
                        }
                    }
                }
            },
            "Lead.jsonld-lead.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "telephone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    }
                }
            },
            "Lead.jsonld-lead.read_lead.item.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "telephone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LeadCustomField.jsonld-lead.read_lead.item.read"
                        }
                    }
                }
            },
            "Lead.jsonld-lead.write": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "telephone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LeadCustomField.jsonld-lead.write"
                        }
                    }
                }
            },
            "LeadCustomField-custom_field.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "parent": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "LeadCustomField-custom_field.write": {
                "type": "object",
                "description": "",
                "properties": {
                    "parent": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "LeadCustomField-lead.read_lead.item.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "LeadCustomField-lead.write": {
                "type": "object",
                "description": "",
                "properties": {
                    "parent": {
                        "$ref": "#/components/schemas/Lead-lead.write"
                    },
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "LeadCustomField.jsonld-custom_field.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parent": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "LeadCustomField.jsonld-custom_field.write": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parent": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "LeadCustomField.jsonld-lead.read_lead.item.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "LeadCustomField.jsonld-lead.write": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Lead.jsonld-lead.write"
                    },
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "LiveChat": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "LiveChat.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "Message": {
                "type": "object",
                "properties": {
                    "id": {},
                    "role": {},
                    "conversation": {},
                    "from": {},
                    "agentMode": {},
                    "type": {},
                    "message": {},
                    "options": {},
                    "createdAt": {},
                    "dateText": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Message.jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {},
                    "role": {},
                    "conversation": {},
                    "from": {},
                    "agentMode": {},
                    "type": {},
                    "message": {},
                    "options": {},
                    "createdAt": {},
                    "dateText": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Stat": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "activeUsers": {
                        "type": "integer"
                    },
                    "totalUsers": {
                        "type": "integer"
                    },
                    "newUsers": {
                        "type": "integer"
                    },
                    "triggers": {
                        "type": "integer"
                    },
                    "receivedMessages": {
                        "type": "integer"
                    },
                    "sentMessages": {
                        "type": "integer"
                    }
                }
            },
            "Stat.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "activeUsers": {
                        "type": "integer"
                    },
                    "totalUsers": {
                        "type": "integer"
                    },
                    "newUsers": {
                        "type": "integer"
                    },
                    "triggers": {
                        "type": "integer"
                    },
                    "receivedMessages": {
                        "type": "integer"
                    },
                    "sentMessages": {
                        "type": "integer"
                    }
                }
            },
            "SubAccount": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "apiKey": {
                        "type": "string"
                    },
                    "parentAccount": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "teamMembers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SubAccount.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "apiKey": {
                        "type": "string"
                    },
                    "parentAccount": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "teamMembers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SupportTicket-support_ticket.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    }
                }
            },
            "SupportTicket-support_ticket.read_support_ticket.item.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "SupportTicket-support_ticket.write": {
                "type": "object",
                "description": ""
            },
            "SupportTicket.jsonld-support_ticket.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    }
                }
            },
            "SupportTicket.jsonld-support_ticket.read_support_ticket.item.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "SupportTicket.jsonld-support_ticket.write": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "TeamMember": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "TeamMember.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "User-user.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "givenName": {
                        "type": "string",
                        "nullable": true
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "flowXoId": {
                        "type": "string"
                    },
                    "parentAccount": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/User-user.read"
                            }
                        ]
                    },
                    "teamMembers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User-user.read"
                        }
                    }
                }
            },
            "User-user.write": {
                "type": "object",
                "description": "",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "description": "The plain password",
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string",
                        "nullable": true
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "flowXoId": {
                        "type": "string"
                    },
                    "apiKey": {
                        "type": "string"
                    },
                    "parentAccount": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/User-user.write"
                            }
                        ]
                    },
                    "teamMembers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User-user.write"
                        }
                    }
                }
            },
            "User.jsonld-user.read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "givenName": {
                        "type": "string",
                        "nullable": true
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "flowXoId": {
                        "type": "string"
                    },
                    "parentAccount": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/User.jsonld-user.read"
                            }
                        ]
                    },
                    "teamMembers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User.jsonld-user.read"
                        }
                    }
                }
            },
            "User.jsonld-user.write": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "description": "The plain password",
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string",
                        "nullable": true
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "flowXoId": {
                        "type": "string"
                    },
                    "apiKey": {
                        "type": "string"
                    },
                    "parentAccount": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/User.jsonld-user.write"
                            }
                        ]
                    },
                    "teamMembers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User.jsonld-user.write"
                        }
                    }
                }
            },
            "Token": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Credentials": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "username@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "PASSWORD"
                    }
                }
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {},
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "description": "Value for the Authorization header parameter.",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "apiKey": []
        }
    ],
    "tags": []
}